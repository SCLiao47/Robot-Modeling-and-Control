function xdot = RR_dynamics(t,x,controller,refFun)
    %     x(1) is position of 1st joint
    %     x(2) is velocity of 1st joint
    %     x(3) is position of 2nd joint
    %     x(4) is velocity of 2nd joint

    global g m1 l1 lc1 I1 m2 lc2 I2
    
    [tau,~] = controller(t,x,refFun);
    
    % actuator satuation
    tau = max(min(tau,10),-10);

    % dynamic of the system
    xdot = zeros(size(x));
    
    xdot(1) = x(2);
    xdot(2) = RR_thdd1(I1,I2,g,l1,lc1,lc2,m1,m2,tau(1),tau(2),x(1),x(3),x(2),x(4));
    xdot(3) = x(4);
    xdot(4) = RR_thdd2(I1,I2,g,l1,lc1,lc2,m1,m2,tau(1),tau(2),x(1),x(3),x(2),x(4));
    
%     global logger
%     logger = [logger;
%               t, ref, e1, e2, tau(1), tau(2)];
end

function out1 = RR_thdd1(I1,I2,g,l1,lc1,lc2,m1,m2,tau1,tau2,th1,th2,thd1,thd2)
%RR_THDD1
%    OUT1 = RR_THDD1(I1,I2,G,L1,LC1,LC2,M1,M2,TAU1,TAU2,TH1,TH2,THD1,THD2)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    20-Apr-2020 22:39:28

t2 = cos(th1);
t3 = cos(th2);
t4 = sin(th2);
t5 = l1.^2;
t6 = lc1.^2;
t7 = lc2.^2;
t8 = lc2.^3;
t9 = m2.^2;
t10 = thd1.^2;
t11 = thd2.^2;
out1 = (I2.*tau1-I2.*tau2+m2.*t7.*tau1-m2.*t7.*tau2-I2.*g.*l1.*m2.*t2-I2.*g.*lc1.*m1.*t2-l1.*lc2.*m2.*t3.*tau2-g.*l1.*t2.*t7.*t9+l1.*t4.*t8.*t9.*t10+l1.*t4.*t8.*t9.*t11+l1.*t4.*t8.*t9.*thd1.*thd2.*2.0+t3.*t4.*t5.*t7.*t9.*t10+g.*l1.*t3.*t7.*t9.*cos(th1+th2)+I2.*l1.*lc2.*m2.*t4.*t10+I2.*l1.*lc2.*m2.*t4.*t11-g.*lc1.*m1.*m2.*t2.*t7+I2.*l1.*lc2.*m2.*t4.*thd1.*thd2.*2.0)./(I1.*I2+I2.*m1.*t6+I2.*m2.*t5+I1.*m2.*t7+t5.*t7.*t9+m1.*m2.*t6.*t7-t3.^2.*t5.*t7.*t9);
end

function out1 = RR_thdd2(I1,I2,g,l1,lc1,lc2,m1,m2,tau1,tau2,th1,th2,thd1,thd2)
%RR_THDD2
%    OUT1 = RR_THDD2(I1,I2,G,L1,LC1,LC2,M1,M2,TAU1,TAU2,TH1,TH2,THD1,THD2)

%    This function was generated by the Symbolic Math Toolbox version 8.4.
%    20-Apr-2020 22:39:29

t2 = cos(th1);
t3 = cos(th2);
t4 = sin(th2);
t5 = th1+th2;
t6 = l1.^2;
t7 = lc1.^2;
t8 = lc2.^2;
t9 = lc2.^3;
t10 = m2.^2;
t11 = thd1.^2;
t12 = thd2.^2;
t13 = cos(t5);
out1 = -(-I1.*tau2+I2.*tau1-I2.*tau2-m1.*t7.*tau2-m2.*t6.*tau2+m2.*t8.*tau1-m2.*t8.*tau2-I2.*g.*l1.*m2.*t2-I2.*g.*lc1.*m1.*t2+I1.*g.*lc2.*m2.*t13+l1.*lc2.*m2.*t3.*tau1-l1.*lc2.*m2.*t3.*tau2.*2.0-g.*l1.*t2.*t8.*t10+g.*lc2.*t6.*t10.*t13+l1.*t4.*t9.*t10.*t11+l1.*t4.*t9.*t10.*t12+l1.^3.*lc2.*t4.*t10.*t11+g.*l1.*t3.*t8.*t10.*t13-g.*lc2.*t2.*t3.*t6.*t10+l1.*t4.*t9.*t10.*thd1.*thd2.*2.0+t3.*t4.*t6.*t8.*t10.*t11.*2.0+t3.*t4.*t6.*t8.*t10.*t12+I1.*l1.*lc2.*m2.*t4.*t11+I2.*l1.*lc2.*m2.*t4.*t11+I2.*l1.*lc2.*m2.*t4.*t12-g.*lc1.*m1.*m2.*t2.*t8+g.*lc2.*m1.*m2.*t7.*t13+I2.*l1.*lc2.*m2.*t4.*thd1.*thd2.*2.0+l1.*lc2.*m1.*m2.*t4.*t7.*t11+t3.*t4.*t6.*t8.*t10.*thd1.*thd2.*2.0-g.*l1.*lc1.*lc2.*m1.*m2.*t2.*t3)./(I1.*I2+I2.*m1.*t7+I2.*m2.*t6+I1.*m2.*t8+t6.*t8.*t10+m1.*m2.*t7.*t8-t3.^2.*t6.*t8.*t10);
end